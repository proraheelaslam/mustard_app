{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Mustared APP  API Documenation",
    "description": "Mustared Application API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "musterddev.techincubator.co:3000",
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/send-invitation": {
      "post": {
        "tags": [
          "Invitation"
        ],
        "description": "API used for to send invitation to the user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User Email",
            "schema": {
              "$ref": "#/definitions/sendinvitation"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      }
    },
    "/send-deep-link": {
      "post": {
        "tags": [
          "Deep Link"
        ],
        "description": "API used for to send deep link to the user",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Deep Link URL",
            "schema": {
              "$ref": "#/definitions/sendDeepLink"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "This APi can be used to add user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User Email",
            "schema": {
              "$ref": "#/definitions/registerUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "This API can be used to Update user",
        "description": "This APi can be used to Update user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User Update Data",
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      }
    },
    "/register_with_fb": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "This APi can be used to add user Using Fb",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User Email",
            "schema": {
              "$ref": "#/definitions/RegisterUserWithFb"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Get User by ID in the system",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/current-user": {
      "get": {
        "tags": [
          "User"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get Current User Info ",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/guest-login": {
      "post": {
        "tags": [
          "Guest Login"
        ],
        "description": "This API can be used to login without account",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/guestLogin"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      }
    },
    "/user/reference/{userid}": {
      "get": {
        "tags": [
          "User Reference"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Get all User Reference related to a user in system",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/reference": {
      "post": {
        "tags": [
          "User Reference"
        ],
        "description": "This API can be used to Add User Reference",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "$ref": "#/definitions/Userreference"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      },
      "put": {
        "tags": [
          "User Reference"
        ],
        "summary": "This API can be used to Update User Reference",
        "description": "This APi can be used to Update User Reference",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User Update Data",
            "schema": {
              "$ref": "#/definitions/Userreference"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      }
    },
    "/user/reference/{id}": {
      "delete": {
        "summary": "Delete user/reference with given ID",
        "tags": [
          "User Reference"
        ],
        "responses": {
          "200": {
            "description": "user/reference is deleted"
          }
        }
      }
    },
    "/property": {
      "post": {
        "tags": [
          "Property"
        ],
        "description": "This API can be used to Add Property",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "$ref": "#/definitions/AddProperty"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      },
      "put": {
        "tags": [
          "Property"
        ],
        "summary": "This API can be used to Update Property",
        "description": "This APi can be used to Update Property",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update Property Data",
            "schema": {
              "$ref": "#/definitions/UpdateProperty"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      },
      "delete": {
        "summary": "Delete property with given ID",
        "tags": [
          "Property"
        ],
        "responses": {
          "200": {
            "description": "property is deleted"
          }
        }
      }
    },
    "/property/{property_id}": {
      "get": {
        "tags": [
          "Property"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "property_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Get  Property by id in the system",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user-property/{user_id}": {
      "get": {
        "tags": [
          "Property"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Get  Property by User Id in the system",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/property/update-status/{id}/{active}": {
      "get": {
        "tags": [
          "Property"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "active",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Used to Active or inactive Property in the system",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/property/discover": {
      "post": {
        "tags": [
          "Property"
        ],
        "description": "This API can be used to Add Property",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "$ref": "#/definitions/addbirthplace"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      }
    },
    "/property/favourite": {
      "post": {
        "tags": [
          "Property"
        ],
        "description": "This API can be used to Add Property favourite",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "$ref": "#/definitions/FavouriteProperty"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      }
    },
    "/property/saved-searches": {
      "get": {
        "tags": [
          "Saved Searches Property"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "Saved Searches Property"
        ],
        "description": "This APi can be used to add Saved Searches Property",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "body",
            "schema": {
              "$ref": "#/definitions/registerUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      },
      "put": {
        "tags": [
          "Saved Searches Property"
        ],
        "summary": "This API can be used to Update user",
        "description": "This APi can be used to Update user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User Update Data",
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      }
    },
    "/property/saved-searches/{userid}": {
      "get": {
        "tags": [
          "Saved Searches Property"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Get Saved Searches Property by User id in the system",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/birthplace": {
      "get": {
        "tags": [
          "BirthPlace"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get all BirthPlace in system",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "BirthPlace"
        ],
        "description": "This API can be used to Add BirthPlace",
        "parameters": [
          {
            "name": "Form Data",
            "in": "body",
            "description": "User Email",
            "schema": {
              "$ref": "#/definitions/addbirthplace"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      },
      "put": {
        "tags": [
          "BirthPlace"
        ],
        "summary": "This API can be used to Update Data",
        "description": "This APi can be used to Update Data",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": " Update Data",
            "schema": {
              "$ref": "#/definitions/registerUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      },
      "delete": {
        "summary": "Delete BirthPlace with given ID",
        "tags": [
          "BirthPlace"
        ],
        "responses": {
          "200": {
            "description": "BirthPlace is deleted"
          }
        }
      }
    },
    "/search-birthplace": {
      "get": {
        "tags": [
          "BirthPlace"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get BirthPlace using search in system",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/employment": {
      "post": {
        "tags": [
          "Employment"
        ],
        "description": "This API can be used to Add Employment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "$ref": "#/definitions/addbirthplace"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      },
      "get": {
        "tags": [
          "Employment"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get all Employment system",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "delete": {
        "summary": "Delete Employment with given ID",
        "tags": [
          "Employment"
        ],
        "responses": {
          "200": {
            "description": "Employment is deleted"
          }
        }
      }
    },
    "/employment/{id}": {
      "get": {
        "tags": [
          "Employment"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Get Employment by  Id in the system",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/save-device-token": {
      "post": {
        "tags": [
          "Save Device Token"
        ],
        "description": "API used for to save device token",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Save device token",
            "schema": {
              "$ref": "#/definitions/saveDeviceToken"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      }
    },
    "/general/filters/settings": {
      "post": {
        "tags": [
          "Settings"
        ],
        "description": "This API can be used to Add Employment",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "$ref": "#/definitions/addbirthplace"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      }
    },
    "/upload": {
      "post": {
        "tags": [
          "Upload File"
        ],
        "description": "This API can be used to Add Upload File",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body",
            "schema": {
              "$ref": "#/definitions/UploadFile"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The specified acction performed."
          }
        }
      }
    }
  },
  "definitions": {
    "sendinvitation": {
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "registerUser": {
      "required": [
        "email",
        "first_name"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "first_name": {
          "type": "string",
          "uniqueItems": true
        },
        "last_name": {
          "type": "string",
          "uniqueItems": true
        },
        "user_name": {
          "type": "string",
          "uniqueItems": true
        },
        "phone_number": {
          "type": "string",
          "uniqueItems": true
        },
        "bank_id": {
          "type": "string",
          "uniqueItems": true
        },
        "credit_report_path": {
          "type": "string",
          "uniqueItems": true
        },
        "linkedin": {
          "type": "string",
          "uniqueItems": true
        },
        "dob": {
          "type": "string",
          "uniqueItems": true
        },
        "birth_place_id": {
          "type": "string",
          "uniqueItems": true
        },
        "employment_id": {
          "type": "string",
          "uniqueItems": true
        },
        "facebook": {
          "type": "string",
          "uniqueItems": true
        },
        "instagram": {
          "type": "string",
          "uniqueItems": true
        },
        "snapchat": {
          "type": "string",
          "uniqueItems": true
        },
        "same_gender": {
          "type": "string",
          "uniqueItems": true
        },
        "annonymus_status": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "RegisterUserWithFb": {
      "required": [
        "fb_id"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "fb_id": {
          "type": "string",
          "uniqueItems": true
        },
        "first_name": {
          "type": "string",
          "uniqueItems": true
        },
        "last_name": {
          "type": "string",
          "uniqueItems": true
        },
        "user_name": {
          "type": "string",
          "uniqueItems": true
        },
        "phone_number": {
          "type": "string",
          "uniqueItems": true
        },
        "bank_id": {
          "type": "string",
          "uniqueItems": true
        },
        "credit_report_path": {
          "type": "string",
          "uniqueItems": true
        },
        "linkedin": {
          "type": "string",
          "uniqueItems": true
        },
        "dob": {
          "type": "string",
          "uniqueItems": true
        },
        "birth_place_id": {
          "type": "string",
          "uniqueItems": true
        },
        "employment_id": {
          "type": "string",
          "uniqueItems": true
        },
        "facebook": {
          "type": "string",
          "uniqueItems": true
        },
        "instagram": {
          "type": "string",
          "uniqueItems": true
        },
        "snapchat": {
          "type": "string",
          "uniqueItems": true
        },
        "same_gender": {
          "type": "string",
          "uniqueItems": true
        },
        "annonymus_status": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "UpdateUser": {
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "first_name": {
          "type": "string",
          "uniqueItems": true
        },
        "last_name": {
          "type": "string",
          "uniqueItems": true
        },
        "user_name": {
          "type": "string",
          "uniqueItems": true
        },
        "phone_number": {
          "type": "string",
          "uniqueItems": true
        },
        "bank_id": {
          "type": "string",
          "uniqueItems": true
        },
        "credit_report_path": {
          "type": "string",
          "uniqueItems": true
        },
        "linkedin": {
          "type": "string",
          "uniqueItems": true
        },
        "dob": {
          "type": "string",
          "uniqueItems": true
        },
        "birth_place_id": {
          "type": "string",
          "uniqueItems": true
        },
        "employment_id": {
          "type": "string",
          "uniqueItems": true
        },
        "facebook": {
          "type": "string",
          "uniqueItems": true
        },
        "instagram": {
          "type": "string",
          "uniqueItems": true
        },
        "snapchat": {
          "type": "string",
          "uniqueItems": true
        },
        "same_gender": {
          "type": "string",
          "uniqueItems": true
        },
        "annonymus_status": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "addbirthplace": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "FavouriteProperty": {
      "required": [
        "name"
      ],
      "properties": {
        "user_id": {
          "type": "string",
          "uniqueItems": true
        },
        "property_id": {
          "type": "string",
          "uniqueItems": true
        },
        "favourite": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "Userreference": {
      "required": [
        "user_id"
      ],
      "properties": {
        "user_id": {
          "type": "number",
          "uniqueItems": true
        },
        "reference_name": {
          "type": "string",
          "uniqueItems": true
        },
        "reference_type": {
          "type": "string",
          "uniqueItems": true
        },
        "reference_comments": {
          "type": "string",
          "uniqueItems": true
        },
        "reference_email": {
          "type": "string",
          "uniqueItems": true
        },
        "refernce_phone_number": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "AddProperty": {
      "required": [
        "user_id",
        "rent",
        "minimum_rent",
        "area"
      ],
      "properties": {
        "user_id": {
          "type": "number",
          "uniqueItems": true
        },
        "address": {
          "type": "string",
          "uniqueItems": true
        },
        "area": {
          "type": "string",
          "uniqueItems": true
        },
        "rent": {
          "type": "number",
          "uniqueItems": true
        },
        "no_of_rooms": {
          "type": "number",
          "uniqueItems": true
        },
        "no_of_bathrooms": {
          "type": "number",
          "uniqueItems": true
        },
        "furnishing": {
          "type": "string",
          "uniqueItems": true
        },
        "minimum_rent": {
          "type": "number",
          "uniqueItems": true
        },
        "property_type": {
          "type": "string",
          "uniqueItems": true
        },
        "minimum_resident_days": {
          "type": "string",
          "uniqueItems": true
        },
        "moving_in_date": {
          "type": "string",
          "uniqueItems": true
        },
        "bidding_close_date": {
          "type": "string",
          "uniqueItems": true
        },
        "tenant_gender": {
          "type": "string",
          "uniqueItems": true
        },
        "tenant_language": {
          "type": "string",
          "uniqueItems": true
        },
        "tenant_smoker": {
          "type": "string",
          "uniqueItems": true
        },
        "tenanat_pet": {
          "type": "string",
          "uniqueItems": true
        },
        "tenanat_commuting_time": {
          "type": "string",
          "uniqueItems": true
        },
        "ad_start_date": {
          "type": "string",
          "uniqueItems": true
        },
        "ad_end_date": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "UpdateProperty": {
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "number",
          "uniqueItems": true
        },
        "user_id": {
          "type": "number",
          "uniqueItems": true
        },
        "address": {
          "type": "string",
          "uniqueItems": true
        },
        "area": {
          "type": "string",
          "uniqueItems": true
        },
        "rent": {
          "type": "number",
          "uniqueItems": true
        },
        "no_of_rooms": {
          "type": "number",
          "uniqueItems": true
        },
        "no_of_bathrooms": {
          "type": "number",
          "uniqueItems": true
        },
        "furnishing": {
          "type": "string",
          "uniqueItems": true
        },
        "minimum_rent": {
          "type": "number",
          "uniqueItems": true
        },
        "property_type": {
          "type": "string",
          "uniqueItems": true
        },
        "minimum_resident_days": {
          "type": "string",
          "uniqueItems": true
        },
        "moving_in_date": {
          "type": "string",
          "uniqueItems": true
        },
        "bidding_close_date": {
          "type": "string",
          "uniqueItems": true
        },
        "tenant_gender": {
          "type": "string",
          "uniqueItems": true
        },
        "tenant_language": {
          "type": "string",
          "uniqueItems": true
        },
        "tenant_smoker": {
          "type": "string",
          "uniqueItems": true
        },
        "tenanat_pet": {
          "type": "string",
          "uniqueItems": true
        },
        "tenanat_commuting_time": {
          "type": "string",
          "uniqueItems": true
        },
        "ad_start_date": {
          "type": "string",
          "uniqueItems": true
        },
        "ad_end_date": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "UploadFile": {
      "required": [
        "uploadFile"
      ],
      "properties": {
        "uploadFile": {
          "type": "string",
          "format": "binary"
        }
      }
    },
    "guestLogin": {
      "properties": {}
    },
    "sendDeepLink": {
      "required": [
        "deep_link"
      ],
      "properties": {
        "deep_link": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "saveDeviceToken": {
      "required": [
        "Device_Token"
      ],
      "properties": {
        "Device_OS": {
          "type": "string",
          "uniqueItems": true
        },
        "Device_Token": {
          "type": "string",
          "uniqueItems": true
        }
      }
    }
  }
}